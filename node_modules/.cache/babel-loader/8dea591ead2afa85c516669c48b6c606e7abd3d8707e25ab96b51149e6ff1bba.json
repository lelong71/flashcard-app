{"ast":null,"code":"var _jsxFileName = \"/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Box, VStack, HStack, Heading, Text, Button, Icon, Alert, AlertIcon, AlertTitle, AlertDescription, useToast, Badge, Divider, useColorModeValue, SimpleGrid, Modal, ModalOverlay, ModalContent, ModalHeader, ModalBody, ModalCloseButton, useDisclosure } from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw, Plus } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadSection() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableSets, setAvailableSets] = useState([]);\n  const [selectedSet, setSelectedSet] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const {\n    isOpen,\n    onOpen,\n    onClose\n  } = useDisclosure();\n  const toast = useToast();\n  const selectedSetRef = useRef('');\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n  const scanForFlashcardSets = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // Load the metadata file to get organized flashcard sets\n      const metadataResponse = await fetch('/flashcard-data/sets-metadata.json');\n      if (!metadataResponse.ok) {\n        throw new Error(`Could not load flashcard sets metadata: ${metadataResponse.status} ${metadataResponse.statusText}`);\n      }\n\n      // Check if the response is actually JSON\n      const contentType = metadataResponse.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        const text = await metadataResponse.text();\n        if (text.includes('<!DOCTYPE')) {\n          throw new Error('Received HTML instead of JSON. The flashcard-data files may not be accessible from the current server.');\n        }\n        throw new Error(`Expected JSON but received: ${contentType}`);\n      }\n      const metadata = await metadataResponse.json();\n      const availableSets = [];\n\n      // Check which files actually exist\n      for (const set of metadata.flashcard_sets) {\n        try {\n          const response = await fetch(`/flashcard-data/${set.filename}`);\n          if (response.ok) {\n            // Verify it's actually JSON\n            const fileContentType = response.headers.get('content-type');\n            if (fileContentType && fileContentType.includes('application/json')) {\n              availableSets.push(set);\n            }\n          }\n        } catch (error) {\n          // File not found or error checking file\n        }\n      }\n      setAvailableSets(availableSets);\n\n      // Auto-select the first set if available and no set is currently selected\n      if (availableSets.length > 0 && !selectedSetRef.current) {\n        setSelectedSet(availableSets[0].filename);\n        selectedSetRef.current = availableSets[0].filename;\n      }\n    } catch (error) {\n      setAvailableSets([]);\n\n      // Show a more helpful error message\n      toast({\n        title: 'Flashcard Data Not Found',\n        description: error instanceof Error ? error.message : 'Could not load flashcard data. Please ensure the flashcard-data folder is accessible.',\n        status: 'warning',\n        duration: 8000,\n        isClosable: true\n      });\n    } finally {\n      setIsScanning(false);\n    }\n  }, [toast]);\n  const loadSelectedSet = useCallback(async filename => {\n    if (!filename) return;\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // Load the actual JSON file from the flashcard-data folder\n      const response = await fetch(`/flashcard-data/${filename}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      // Check if the response is actually JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        const text = await response.text();\n        if (text.includes('<!DOCTYPE')) {\n          throw new Error('Received HTML instead of JSON. The flashcard-data files may not be accessible from the current server.');\n        }\n        throw new Error(`Expected JSON but received: ${contentType}`);\n      }\n      const data = await response.json();\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: data.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: data.metadata || {}\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, [dispatch, toast]);\n\n  // Scan for flashcard sets on component mount\n  useEffect(() => {\n    console.log('🚀 UploadSection mounted, starting scan...');\n    scanForFlashcardSets();\n  }, [scanForFlashcardSets]);\n\n  // Load selected set when it changes\n  useEffect(() => {\n    console.log('🔄 selectedSet changed:', selectedSet);\n    if (selectedSet) {\n      loadSelectedSet(selectedSet);\n    }\n  }, [selectedSet, loadSelectedSet]);\n  const handleFileUpload = useCallback(async file => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: data.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: data.metadata || {}\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n      onClose(); // Close the upload modal\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  }, [dispatch, toast, onClose]);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n  const handleFileInput = useCallback(e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n  const handleSetSelect = useCallback(filename => {\n    setSelectedSet(filename);\n    selectedSetRef.current = filename;\n    loadSelectedSet(filename);\n  }, [loadSelectedSet]);\n\n  // If we have flashcards loaded, show a minimal upload button\n  if (state.flashcards.length > 0) {\n    console.log('✅ Flashcards loaded, showing minimal upload button');\n    return /*#__PURE__*/_jsxDEV(Box, {\n      position: \"fixed\",\n      bottom: 6,\n      right: 6,\n      zIndex: 1000,\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        whileHover: {\n          scale: 1.05\n        },\n        whileTap: {\n          scale: 0.95\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          colorScheme: \"brand\",\n          size: \"lg\",\n          rounded: \"full\",\n          leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n            as: Plus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 23\n          }, this),\n          onClick: onOpen,\n          boxShadow: \"lg\",\n          children: \"Add More Sets\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        isOpen: isOpen,\n        onClose: onClose,\n        size: \"lg\",\n        children: [/*#__PURE__*/_jsxDEV(ModalOverlay, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ModalContent, {\n          children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n            children: \"\\uD83D\\uDCE4 Upload New Flashcard Set\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalCloseButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n            pb: 6,\n            children: /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 6,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                color: \"gray.600\",\n                children: \"Upload a JSON file created by the PDF converter tool\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                borderWidth: 2,\n                borderStyle: \"dashed\",\n                borderColor: isDragOver ? \"blue.500\" : \"gray.300\",\n                bg: isDragOver ? \"blue.50\" : \"transparent\",\n                rounded: \"lg\",\n                p: 8,\n                transition: \"all 0.2s\",\n                _hover: {\n                  borderColor: \"gray.400\"\n                },\n                onDrop: handleDrop,\n                onDragOver: handleDragOver,\n                onDragLeave: handleDragLeave,\n                w: \"100%\",\n                children: /*#__PURE__*/_jsxDEV(VStack, {\n                  spacing: 4,\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: \"jsonFile\",\n                    style: {\n                      cursor: 'pointer'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(motion.div, {\n                      whileHover: {\n                        scale: 1.05\n                      },\n                      whileTap: {\n                        scale: 0.95\n                      },\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        colorScheme: \"brand\",\n                        size: \"lg\",\n                        leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                          as: Upload\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 332,\n                          columnNumber: 37\n                        }, this),\n                        children: \"Choose JSON File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 325,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 324,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    id: \"jsonFile\",\n                    accept: \".json\",\n                    style: {\n                      display: 'none'\n                    },\n                    onChange: handleFileInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Text, {\n                    fontSize: \"sm\",\n                    color: \"gray.500\",\n                    children: \"or drag and drop JSON file here\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 347,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n                children: state.error && /*#__PURE__*/_jsxDEV(motion.div, {\n                  initial: {\n                    opacity: 0,\n                    height: 0\n                  },\n                  animate: {\n                    opacity: 1,\n                    height: 'auto'\n                  },\n                  exit: {\n                    opacity: 0,\n                    height: 0\n                  },\n                  style: {\n                    width: '100%'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Alert, {\n                    status: \"error\",\n                    rounded: \"lg\",\n                    children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 363,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n                        children: \"Error Loading File\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 365,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                        children: state.error\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 366,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 364,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If we're still scanning for files, show a loading state\n  if (isScanning) {\n    console.log('⏳ Still scanning, showing loading state');\n    return /*#__PURE__*/_jsxDEV(Box, {\n      bg: bgColor,\n      rounded: \"lg\",\n      shadow: \"lg\",\n      p: 8,\n      mb: 8,\n      borderWidth: \"1px\",\n      borderColor: borderColor,\n      textAlign: \"center\",\n      children: /*#__PURE__*/_jsxDEV(VStack, {\n        spacing: 4,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          as: FolderOpen,\n          w: 12,\n          h: 12,\n          color: \"blue.500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          fontSize: \"lg\",\n          color: \"gray.600\",\n          children: \"Loading your flashcard sets...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If no flashcards are loaded, show the full upload interface\n  console.log('📤 No flashcards loaded, showing full upload interface');\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -20\n      },\n      transition: {\n        duration: 0.5\n      },\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: bgColor,\n        rounded: \"lg\",\n        shadow: \"lg\",\n        p: 8,\n        mb: 8,\n        borderWidth: \"1px\",\n        borderColor: borderColor,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 6,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1\n            },\n            transition: {\n              delay: 0.2,\n              type: \"spring\",\n              stiffness: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: FolderOpen,\n              w: 16,\n              h: 16,\n              color: \"blue.500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"lg\",\n              color: \"gray.800\",\n              children: \"Welcome to Flashcard App! \\uD83C\\uDF93\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.600\",\n              fontSize: \"lg\",\n              children: \"Choose from your organized flashcard sets\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 438,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 13\n          }, this), availableSets.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              justify: \"space-between\",\n              mb: 4,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"semibold\",\n                color: \"gray.700\",\n                fontSize: \"lg\",\n                children: \"\\uD83D\\uDCC1 Available Flashcard Sets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"ghost\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                  as: RefreshCw\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 453,\n                  columnNumber: 31\n                }, this),\n                onClick: scanForFlashcardSets,\n                isLoading: isScanning,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 450,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(SimpleGrid, {\n              columns: {\n                base: 1,\n                md: 2\n              },\n              spacing: 4,\n              children: availableSets.map((set, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  x: -20\n                },\n                animate: {\n                  opacity: 1,\n                  x: 0\n                },\n                transition: {\n                  delay: index * 0.1\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  p: 4,\n                  borderWidth: \"1px\",\n                  borderColor: selectedSet === set.filename ? \"blue.300\" : \"gray.200\",\n                  bg: selectedSet === set.filename ? \"blue.50\" : \"transparent\",\n                  rounded: \"lg\",\n                  cursor: \"pointer\",\n                  _hover: {\n                    borderColor: \"blue.300\",\n                    bg: \"blue.50\"\n                  },\n                  onClick: () => handleSetSelect(set.filename),\n                  transition: \"all 0.2s\",\n                  children: /*#__PURE__*/_jsxDEV(VStack, {\n                    align: \"start\",\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(HStack, {\n                      justify: \"space-between\",\n                      w: \"100%\",\n                      children: [/*#__PURE__*/_jsxDEV(HStack, {\n                        spacing: 3,\n                        children: [/*#__PURE__*/_jsxDEV(Icon, {\n                          as: FileText,\n                          color: \"blue.500\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 486,\n                          columnNumber: 31\n                        }, this), /*#__PURE__*/_jsxDEV(Text, {\n                          fontWeight: \"bold\",\n                          fontSize: \"md\",\n                          children: set.title\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 487,\n                          columnNumber: 31\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 485,\n                        columnNumber: 29\n                      }, this), selectedSet === set.filename && /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: \"blue\",\n                        variant: \"subtle\",\n                        children: \"Selected\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 492,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 484,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(Text, {\n                      fontSize: \"sm\",\n                      color: \"gray.600\",\n                      children: set.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 498,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(HStack, {\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: \"green\",\n                        variant: \"outline\",\n                        children: [set.card_count, \" cards\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: \"purple\",\n                        variant: \"outline\",\n                        children: set.category\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 506,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Badge, {\n                        colorScheme: \"orange\",\n                        variant: \"outline\",\n                        children: set.difficulty\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 509,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 483,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 23\n                }, this)\n              }, set.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 522,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"semibold\",\n              color: \"gray.700\",\n              mb: 3,\n              children: \"\\uD83D\\uDCE4 Upload New Flashcard Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 526,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              borderWidth: 2,\n              borderStyle: \"dashed\",\n              borderColor: isDragOver ? \"blue.500\" : \"gray.300\",\n              bg: isDragOver ? \"blue.50\" : \"transparent\",\n              rounded: \"lg\",\n              p: 6,\n              transition: \"all 0.2s\",\n              _hover: {\n                borderColor: \"gray.400\"\n              },\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onDragLeave: handleDragLeave,\n              children: /*#__PURE__*/_jsxDEV(VStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"jsonFile\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(motion.div, {\n                    whileHover: {\n                      scale: 1.05\n                    },\n                    whileTap: {\n                      scale: 0.95\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"brand\",\n                      size: \"lg\",\n                      leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                        as: Upload\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 552,\n                        columnNumber: 35\n                      }, this),\n                      children: \"Choose JSON File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 549,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 545,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"jsonFile\",\n                  accept: \".json\",\n                  style: {\n                    display: 'none'\n                  },\n                  onChange: handleFileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 559,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: \"or drag and drop JSON file here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 567,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 525,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: state.error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                height: 0\n              },\n              animate: {\n                opacity: 1,\n                height: 'auto'\n              },\n              exit: {\n                opacity: 0,\n                height: 0\n              },\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                status: \"error\",\n                rounded: \"lg\",\n                children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 584,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n                    children: \"Error Loading File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                    children: state.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 585,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 583,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 575,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 407,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSection, \"Ht9hnifEiHfdDbQ6hoyYmJDdyvg=\", false, function () {\n  return [useFlashcard, useDisclosure, useToast, useColorModeValue, useColorModeValue];\n});\n_c = UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","useRef","motion","AnimatePresence","Box","VStack","HStack","Heading","Text","Button","Icon","Alert","AlertIcon","AlertTitle","AlertDescription","useToast","Badge","Divider","useColorModeValue","SimpleGrid","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","useDisclosure","Upload","FileText","FolderOpen","RefreshCw","Plus","useFlashcard","jsxDEV","_jsxDEV","UploadSection","_s","state","dispatch","isDragOver","setIsDragOver","availableSets","setAvailableSets","selectedSet","setSelectedSet","isScanning","setIsScanning","isOpen","onOpen","onClose","toast","selectedSetRef","bgColor","borderColor","scanForFlashcardSets","metadataResponse","fetch","ok","Error","status","statusText","contentType","headers","get","includes","text","metadata","json","set","flashcard_sets","response","filename","fileContentType","push","error","length","current","title","description","message","duration","isClosable","loadSelectedSet","type","payload","data","flashcards","Array","isArray","errorMessage","console","log","handleFileUpload","file","name","endsWith","JSON","parse","handleDrop","e","preventDefault","files","dataTransfer","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","target","handleSetSelect","position","bottom","right","zIndex","children","div","whileHover","scale","whileTap","colorScheme","size","rounded","leftIcon","as","fileName","_jsxFileName","lineNumber","columnNumber","onClick","boxShadow","pb","spacing","color","borderWidth","borderStyle","bg","p","transition","_hover","onDrop","onDragOver","onDragLeave","w","htmlFor","style","cursor","id","accept","display","onChange","fontSize","initial","opacity","height","animate","exit","width","shadow","mb","textAlign","h","y","delay","stiffness","justify","fontWeight","variant","isLoading","columns","base","md","map","index","x","align","card_count","category","difficulty","_c","$RefreshReg$"],"sources":["/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect, useRef } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Box, \n  VStack, \n  HStack,\n  Heading, \n  Text, \n  Button, \n  Icon, \n  Alert, \n  AlertIcon, \n  AlertTitle, \n  AlertDescription,\n  useToast,\n  Badge,\n  Divider,\n  useColorModeValue,\n  SimpleGrid,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw, Plus } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\n\ninterface FlashcardSet {\n  id: string;\n  filename: string;\n  title: string;\n  description: string;\n  category: string;\n  difficulty: string;\n  card_count: number;\n  created_date: string;\n  tags: string[];\n}\n\nexport function UploadSection() {\n  const { state, dispatch } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableSets, setAvailableSets] = useState<FlashcardSet[]>([]);\n  const [selectedSet, setSelectedSet] = useState<string>('');\n  const [isScanning, setIsScanning] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toast = useToast();\n  const selectedSetRef = useRef<string>('');\n  \n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  const scanForFlashcardSets = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // Load the metadata file to get organized flashcard sets\n      const metadataResponse = await fetch('/flashcard-data/sets-metadata.json');\n      if (!metadataResponse.ok) {\n        throw new Error(`Could not load flashcard sets metadata: ${metadataResponse.status} ${metadataResponse.statusText}`);\n      }\n      \n      // Check if the response is actually JSON\n      const contentType = metadataResponse.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        const text = await metadataResponse.text();\n        if (text.includes('<!DOCTYPE')) {\n          throw new Error('Received HTML instead of JSON. The flashcard-data files may not be accessible from the current server.');\n        }\n        throw new Error(`Expected JSON but received: ${contentType}`);\n      }\n      \n      const metadata = await metadataResponse.json();\n      const availableSets: FlashcardSet[] = [];\n      \n      // Check which files actually exist\n      for (const set of metadata.flashcard_sets) {\n        try {\n          const response = await fetch(`/flashcard-data/${set.filename}`);\n          if (response.ok) {\n            // Verify it's actually JSON\n            const fileContentType = response.headers.get('content-type');\n            if (fileContentType && fileContentType.includes('application/json')) {\n              availableSets.push(set);\n            }\n          }\n        } catch (error) {\n          // File not found or error checking file\n        }\n      }\n      \n      setAvailableSets(availableSets);\n      \n      // Auto-select the first set if available and no set is currently selected\n      if (availableSets.length > 0 && !selectedSetRef.current) {\n        setSelectedSet(availableSets[0].filename);\n        selectedSetRef.current = availableSets[0].filename;\n      }\n    } catch (error) {\n      setAvailableSets([]);\n      \n      // Show a more helpful error message\n      toast({\n        title: 'Flashcard Data Not Found',\n        description: error instanceof Error ? error.message : 'Could not load flashcard data. Please ensure the flashcard-data folder is accessible.',\n        status: 'warning',\n        duration: 8000,\n        isClosable: true,\n      });\n    } finally {\n      setIsScanning(false);\n    }\n  }, [toast]);\n\n  const loadSelectedSet = useCallback(async (filename: string) => {\n    if (!filename) return;\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Load the actual JSON file from the flashcard-data folder\n      const response = await fetch(`/flashcard-data/${filename}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      // Check if the response is actually JSON\n      const contentType = response.headers.get('content-type');\n      if (!contentType || !contentType.includes('application/json')) {\n        const text = await response.text();\n        if (text.includes('<!DOCTYPE')) {\n          throw new Error('Received HTML instead of JSON. The flashcard-data files may not be accessible from the current server.');\n        }\n        throw new Error(`Expected JSON but received: ${contentType}`);\n      }\n      \n      const data = await response.json();\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch, toast]);\n\n  // Scan for flashcard sets on component mount\n  useEffect(() => {\n    console.log('🚀 UploadSection mounted, starting scan...');\n    scanForFlashcardSets();\n  }, [scanForFlashcardSets]);\n\n  // Load selected set when it changes\n  useEffect(() => {\n    console.log('🔄 selectedSet changed:', selectedSet);\n    if (selectedSet) {\n      loadSelectedSet(selectedSet);\n    }\n  }, [selectedSet, loadSelectedSet]);\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      onClose(); // Close the upload modal\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [dispatch, toast, onClose]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleFileInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n\n  const handleSetSelect = useCallback((filename: string) => {\n    setSelectedSet(filename);\n    selectedSetRef.current = filename;\n    loadSelectedSet(filename);\n  }, [loadSelectedSet]);\n\n  // If we have flashcards loaded, show a minimal upload button\n  if (state.flashcards.length > 0) {\n    console.log('✅ Flashcards loaded, showing minimal upload button');\n    return (\n      <Box position=\"fixed\" bottom={6} right={6} zIndex={1000}>\n        <motion.div\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <Button\n            colorScheme=\"brand\"\n            size=\"lg\"\n            rounded=\"full\"\n            leftIcon={<Icon as={Plus} />}\n            onClick={onOpen}\n            boxShadow=\"lg\"\n          >\n            Add More Sets\n          </Button>\n        </motion.div>\n\n        {/* Upload Modal */}\n        <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>📤 Upload New Flashcard Set</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={6}>\n              <VStack spacing={6}>\n                <Text color=\"gray.600\">\n                  Upload a JSON file created by the PDF converter tool\n                </Text>\n\n                <Box\n                  borderWidth={2}\n                  borderStyle=\"dashed\"\n                  borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                  bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                  rounded=\"lg\"\n                  p={8}\n                  transition=\"all 0.2s\"\n                  _hover={{ borderColor: \"gray.400\" }}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onDragLeave={handleDragLeave}\n                  w=\"100%\"\n                >\n                  <VStack spacing={4}>\n                    <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                      <motion.div\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                      >\n                        <Button \n                          colorScheme=\"brand\" \n                          size=\"lg\"\n                          leftIcon={<Icon as={Upload} />}\n                        >\n                          Choose JSON File\n                        </Button>\n                      </motion.div>\n                    </label>\n                    \n                    <input\n                      type=\"file\"\n                      id=\"jsonFile\"\n                      accept=\".json\"\n                      style={{ display: 'none' }}\n                      onChange={handleFileInput}\n                    />\n                    \n                    <Text fontSize=\"sm\" color=\"gray.500\">\n                      or drag and drop JSON file here\n                    </Text>\n                  </VStack>\n                </Box>\n\n                {/* Error Display */}\n                <AnimatePresence>\n                  {state.error && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: 'auto' }}\n                      exit={{ opacity: 0, height: 0 }}\n                      style={{ width: '100%' }}\n                    >\n                      <Alert status=\"error\" rounded=\"lg\">\n                        <AlertIcon />\n                        <Box>\n                          <AlertTitle>Error Loading File</AlertTitle>\n                          <AlertDescription>{state.error}</AlertDescription>\n                        </Box>\n                      </Alert>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </VStack>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Box>\n    );\n  }\n\n  // If we're still scanning for files, show a loading state\n  if (isScanning) {\n    console.log('⏳ Still scanning, showing loading state');\n    return (\n      <Box \n        bg={bgColor} \n        rounded=\"lg\" \n        shadow=\"lg\" \n        p={8} \n        mb={8}\n        borderWidth=\"1px\"\n        borderColor={borderColor}\n        textAlign=\"center\"\n      >\n        <VStack spacing={4}>\n          <Icon as={FolderOpen} w={12} h={12} color=\"blue.500\" />\n          <Text fontSize=\"lg\" color=\"gray.600\">\n            Loading your flashcard sets...\n          </Text>\n        </VStack>\n      </Box>\n    );\n  }\n\n  // If no flashcards are loaded, show the full upload interface\n  console.log('📤 No flashcards loaded, showing full upload interface');\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        transition={{ duration: 0.5 }}\n        style={{ width: '100%' }}\n      >\n        <Box \n          bg={bgColor} \n          rounded=\"lg\" \n          shadow=\"lg\" \n          p={8} \n          mb={8}\n          borderWidth=\"1px\"\n          borderColor={borderColor}\n        >\n          <VStack spacing={6} textAlign=\"center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n            >\n              <Icon as={FolderOpen} w={16} h={16} color=\"blue.500\" />\n            </motion.div>\n            \n            <VStack spacing={4}>\n              <Heading size=\"lg\" color=\"gray.800\">\n                Welcome to Flashcard App! 🎓\n              </Heading>\n              \n              <Text color=\"gray.600\" fontSize=\"lg\">\n                Choose from your organized flashcard sets\n              </Text>\n            </VStack>\n\n            {/* Available Sets Section */}\n            {availableSets.length > 0 && (\n              <Box w=\"100%\" textAlign=\"left\">\n                <HStack justify=\"space-between\" mb={4}>\n                  <Text fontWeight=\"semibold\" color=\"gray.700\" fontSize=\"lg\">\n                    📁 Available Flashcard Sets\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    leftIcon={<Icon as={RefreshCw} />}\n                    onClick={scanForFlashcardSets}\n                    isLoading={isScanning}\n                  >\n                    Refresh\n                  </Button>\n                </HStack>\n                \n                <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>\n                  {availableSets.map((set, index) => (\n                    <motion.div\n                      key={set.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: index * 0.1 }}\n                    >\n                      <Box\n                        p={4}\n                        borderWidth=\"1px\"\n                        borderColor={selectedSet === set.filename ? \"blue.300\" : \"gray.200\"}\n                        bg={selectedSet === set.filename ? \"blue.50\" : \"transparent\"}\n                        rounded=\"lg\"\n                        cursor=\"pointer\"\n                        _hover={{ \n                          borderColor: \"blue.300\",\n                          bg: \"blue.50\"\n                        }}\n                        onClick={() => handleSetSelect(set.filename)}\n                        transition=\"all 0.2s\"\n                      >\n                        <VStack align=\"start\" spacing={2}>\n                          <HStack justify=\"space-between\" w=\"100%\">\n                            <HStack spacing={3}>\n                              <Icon as={FileText} color=\"blue.500\" />\n                              <Text fontWeight=\"bold\" fontSize=\"md\">\n                                {set.title}\n                              </Text>\n                            </HStack>\n                            {selectedSet === set.filename && (\n                              <Badge colorScheme=\"blue\" variant=\"subtle\">\n                                Selected\n                              </Badge>\n                            )}\n                          </HStack>\n                          \n                          <Text fontSize=\"sm\" color=\"gray.600\">\n                            {set.description}\n                          </Text>\n                          \n                          <HStack spacing={2}>\n                            <Badge colorScheme=\"green\" variant=\"outline\">\n                              {set.card_count} cards\n                            </Badge>\n                            <Badge colorScheme=\"purple\" variant=\"outline\">\n                              {set.category}\n                            </Badge>\n                            <Badge colorScheme=\"orange\" variant=\"outline\">\n                              {set.difficulty}\n                            </Badge>\n                          </HStack>\n                        </VStack>\n                      </Box>\n                    </motion.div>\n                  ))}\n                </SimpleGrid>\n              </Box>\n            )}\n\n            {/* Divider */}\n            <Divider />\n\n            {/* Upload New File Section */}\n            <Box w=\"100%\" textAlign=\"left\">\n              <Text fontWeight=\"semibold\" color=\"gray.700\" mb={3}>\n                📤 Upload New Flashcard Set\n              </Text>\n              \n              <Box\n                borderWidth={2}\n                borderStyle=\"dashed\"\n                borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                rounded=\"lg\"\n                p={6}\n                transition=\"all 0.2s\"\n                _hover={{ borderColor: \"gray.400\" }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n              >\n                <VStack spacing={4}>\n                  <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Button \n                        colorScheme=\"brand\" \n                        size=\"lg\"\n                        leftIcon={<Icon as={Upload} />}\n                      >\n                        Choose JSON File\n                      </Button>\n                    </motion.div>\n                  </label>\n                  \n                  <input\n                    type=\"file\"\n                    id=\"jsonFile\"\n                    accept=\".json\"\n                    style={{ display: 'none' }}\n                    onChange={handleFileInput}\n                  />\n                  \n                  <Text fontSize=\"sm\" color=\"gray.500\">\n                    or drag and drop JSON file here\n                  </Text>\n                </VStack>\n              </Box>\n            </Box>\n\n            {/* Error Display */}\n            <AnimatePresence>\n              {state.error && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  style={{ width: '100%' }}\n                >\n                  <Alert status=\"error\" rounded=\"lg\">\n                    <AlertIcon />\n                    <Box>\n                      <AlertTitle>Error Loading File</AlertTitle>\n                      <AlertDescription>{state.error}</AlertDescription>\n                    </Box>\n                  </Alert>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </VStack>\n        </Box>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}