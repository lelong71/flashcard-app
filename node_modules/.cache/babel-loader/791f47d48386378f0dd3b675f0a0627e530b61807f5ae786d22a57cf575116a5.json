{"ast":null,"code":"import React,{useCallback,useState,useEffect}from'react';import{motion,AnimatePresence}from'framer-motion';import{Box,VStack,HStack,Heading,Text,Button,Icon,Alert,AlertIcon,AlertTitle,AlertDescription,useToast,Badge,Divider,useColorModeValue,SimpleGrid,Modal,ModalOverlay,ModalContent,ModalHeader,ModalBody,ModalCloseButton,useDisclosure}from'@chakra-ui/react';import{Upload,FileText,FolderOpen,RefreshCw,Plus}from'lucide-react';import{useFlashcard}from'../contexts/FlashcardContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export function UploadSection(){const{state,dispatch}=useFlashcard();const[isDragOver,setIsDragOver]=useState(false);const[availableSets,setAvailableSets]=useState([]);const[selectedSet,setSelectedSet]=useState('');const[isScanning,setIsScanning]=useState(false);const{isOpen,onOpen,onClose}=useDisclosure();const toast=useToast();const bgColor=useColorModeValue('white','gray.800');const borderColor=useColorModeValue('gray.200','gray.700');const scanForFlashcardSets=useCallback(async()=>{setIsScanning(true);try{// Load the metadata file to get organized flashcard sets\nconst metadataResponse=await fetch('/flashcard-data/sets-metadata.json');if(!metadataResponse.ok){throw new Error('Could not load flashcard sets metadata');}const metadata=await metadataResponse.json();const availableSets=[];// Check which files actually exist\nfor(const set of metadata.flashcard_sets){try{const response=await fetch(\"/flashcard-data/\".concat(set.filename));if(response.ok){availableSets.push(set);}}catch(error){console.log(\"File \".concat(set.filename,\" not found\"));}}setAvailableSets(availableSets);// Auto-select the first set if available\nif(availableSets.length>0&&!selectedSet){setSelectedSet(availableSets[0].filename);// We'll load the file in a separate effect\n}}catch(error){console.log('No flashcard sets found');setAvailableSets([]);}finally{setIsScanning(false);}},[selectedSet]);const loadSelectedSet=useCallback(async filename=>{if(!filename)return;dispatch({type:'SET_LOADING',payload:true});dispatch({type:'SET_ERROR',payload:null});try{// Load the actual JSON file from the flashcard-data folder\nconst response=await fetch(\"/flashcard-data/\".concat(filename));if(!response.ok){throw new Error(\"HTTP error! status: \".concat(response.status));}const data=await response.json();if(!data.flashcards||!Array.isArray(data.flashcards)){throw new Error('Invalid JSON format: missing flashcards array');}if(data.flashcards.length===0){throw new Error('No flashcards found in the JSON file');}dispatch({type:'SET_FLASHCARDS',payload:data.flashcards});dispatch({type:'SET_METADATA',payload:data.metadata||{}});toast({title:'Success!',description:\"Loaded \".concat(data.flashcards.length,\" flashcards from \").concat(filename),status:'success',duration:3000,isClosable:true});}catch(error){const errorMessage=\"Failed to load \".concat(filename,\": \").concat(error instanceof Error?error.message:'Unknown error');dispatch({type:'SET_ERROR',payload:errorMessage});toast({title:'Error loading file',description:errorMessage,status:'error',duration:5000,isClosable:true});}finally{dispatch({type:'SET_LOADING',payload:false});}},[dispatch,toast]);// Scan for flashcard sets on component mount\nuseEffect(()=>{scanForFlashcardSets();},[scanForFlashcardSets]);// Load selected set when it changes\nuseEffect(()=>{if(selectedSet){loadSelectedSet(selectedSet);}},[selectedSet,loadSelectedSet]);const handleFileUpload=useCallback(async file=>{if(!file.name.endsWith('.json')){toast({title:'Invalid file type',description:'Please select a JSON file',status:'error',duration:5000,isClosable:true});return;}dispatch({type:'SET_LOADING',payload:true});dispatch({type:'SET_ERROR',payload:null});try{const text=await file.text();const data=JSON.parse(text);if(!data.flashcards||!Array.isArray(data.flashcards)){throw new Error('Invalid JSON format: missing flashcards array');}if(data.flashcards.length===0){throw new Error('No flashcards found in the JSON file');}dispatch({type:'SET_FLASHCARDS',payload:data.flashcards});dispatch({type:'SET_METADATA',payload:data.metadata||{}});toast({title:'Success!',description:\"Loaded \".concat(data.flashcards.length,\" flashcards from \").concat(file.name),status:'success',duration:3000,isClosable:true});onClose();// Close the upload modal\n}catch(error){const errorMessage=\"Failed to load JSON file: \".concat(error instanceof Error?error.message:'Unknown error');dispatch({type:'SET_ERROR',payload:errorMessage});toast({title:'Error loading file',description:errorMessage,status:'error',duration:5000,isClosable:true});}},[dispatch,toast,onClose]);const handleDrop=useCallback(e=>{e.preventDefault();setIsDragOver(false);const files=e.dataTransfer.files;if(files.length>0){handleFileUpload(files[0]);}},[handleFileUpload]);const handleDragOver=useCallback(e=>{e.preventDefault();setIsDragOver(true);},[]);const handleDragLeave=useCallback(e=>{e.preventDefault();setIsDragOver(false);},[]);const handleFileInput=useCallback(e=>{var _e$target$files;const file=(_e$target$files=e.target.files)===null||_e$target$files===void 0?void 0:_e$target$files[0];if(file){handleFileUpload(file);}},[handleFileUpload]);const handleSetSelect=useCallback(filename=>{setSelectedSet(filename);loadSelectedSet(filename);},[loadSelectedSet]);// If we have flashcards loaded, show a minimal upload button\nif(state.flashcards.length>0){return/*#__PURE__*/_jsxs(Box,{position:\"fixed\",bottom:6,right:6,zIndex:1000,children:[/*#__PURE__*/_jsx(motion.div,{whileHover:{scale:1.05},whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(Button,{colorScheme:\"brand\",size:\"lg\",rounded:\"full\",leftIcon:/*#__PURE__*/_jsx(Icon,{as:Plus}),onClick:onOpen,boxShadow:\"lg\",children:\"Add More Sets\"})}),/*#__PURE__*/_jsxs(Modal,{isOpen:isOpen,onClose:onClose,size:\"lg\",children:[/*#__PURE__*/_jsx(ModalOverlay,{}),/*#__PURE__*/_jsxs(ModalContent,{children:[/*#__PURE__*/_jsx(ModalHeader,{children:\"\\uD83D\\uDCE4 Upload New Flashcard Set\"}),/*#__PURE__*/_jsx(ModalCloseButton,{}),/*#__PURE__*/_jsx(ModalBody,{pb:6,children:/*#__PURE__*/_jsxs(VStack,{spacing:6,children:[/*#__PURE__*/_jsx(Text,{color:\"gray.600\",children:\"Upload a JSON file created by the PDF converter tool\"}),/*#__PURE__*/_jsx(Box,{borderWidth:2,borderStyle:\"dashed\",borderColor:isDragOver?\"blue.500\":\"gray.300\",bg:isDragOver?\"blue.50\":\"transparent\",rounded:\"lg\",p:8,transition:\"all 0.2s\",_hover:{borderColor:\"gray.400\"},onDrop:handleDrop,onDragOver:handleDragOver,onDragLeave:handleDragLeave,w:\"100%\",children:/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"jsonFile\",style:{cursor:'pointer'},children:/*#__PURE__*/_jsx(motion.div,{whileHover:{scale:1.05},whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(Button,{colorScheme:\"brand\",size:\"lg\",leftIcon:/*#__PURE__*/_jsx(Icon,{as:Upload}),children:\"Choose JSON File\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"jsonFile\",accept:\".json\",style:{display:'none'},onChange:handleFileInput}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.500\",children:\"or drag and drop JSON file here\"})]})}),/*#__PURE__*/_jsx(AnimatePresence,{children:state.error&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,height:0},animate:{opacity:1,height:'auto'},exit:{opacity:0,height:0},style:{width:'100%'},children:/*#__PURE__*/_jsxs(Alert,{status:\"error\",rounded:\"lg\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error Loading File\"}),/*#__PURE__*/_jsx(AlertDescription,{children:state.error})]})]})})})]})})]})]})]});}// If no flashcards are loaded, show the full upload interface\nreturn/*#__PURE__*/_jsx(AnimatePresence,{children:/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.5},style:{width:'100%'},children:/*#__PURE__*/_jsx(Box,{bg:bgColor,rounded:\"lg\",shadow:\"lg\",p:8,mb:8,borderWidth:\"1px\",borderColor:borderColor,children:/*#__PURE__*/_jsxs(VStack,{spacing:6,textAlign:\"center\",children:[/*#__PURE__*/_jsx(motion.div,{initial:{scale:0},animate:{scale:1},transition:{delay:0.2,type:\"spring\",stiffness:200},children:/*#__PURE__*/_jsx(Icon,{as:FolderOpen,w:16,h:16,color:\"blue.500\"})}),/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsx(Heading,{size:\"lg\",color:\"gray.800\",children:\"Welcome to Flashcard App! \\uD83C\\uDF93\"}),/*#__PURE__*/_jsx(Text,{color:\"gray.600\",fontSize:\"lg\",children:\"Choose from your organized flashcard sets\"})]}),availableSets.length>0&&/*#__PURE__*/_jsxs(Box,{w:\"100%\",textAlign:\"left\",children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",mb:4,children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"semibold\",color:\"gray.700\",fontSize:\"lg\",children:\"\\uD83D\\uDCC1 Available Flashcard Sets\"}),/*#__PURE__*/_jsx(Button,{size:\"sm\",variant:\"ghost\",leftIcon:/*#__PURE__*/_jsx(Icon,{as:RefreshCw}),onClick:scanForFlashcardSets,isLoading:isScanning,children:\"Refresh\"})]}),/*#__PURE__*/_jsx(SimpleGrid,{columns:{base:1,md:2},spacing:4,children:availableSets.map((set,index)=>/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{delay:index*0.1},children:/*#__PURE__*/_jsx(Box,{p:4,borderWidth:\"1px\",borderColor:selectedSet===set.filename?\"blue.300\":\"gray.200\",bg:selectedSet===set.filename?\"blue.50\":\"transparent\",rounded:\"lg\",cursor:\"pointer\",_hover:{borderColor:\"blue.300\",bg:\"blue.50\"},onClick:()=>handleSetSelect(set.filename),transition:\"all 0.2s\",children:/*#__PURE__*/_jsxs(VStack,{align:\"start\",spacing:2,children:[/*#__PURE__*/_jsxs(HStack,{justify:\"space-between\",w:\"100%\",children:[/*#__PURE__*/_jsxs(HStack,{spacing:3,children:[/*#__PURE__*/_jsx(Icon,{as:FileText,color:\"blue.500\"}),/*#__PURE__*/_jsx(Text,{fontWeight:\"bold\",fontSize:\"md\",children:set.title})]}),selectedSet===set.filename&&/*#__PURE__*/_jsx(Badge,{colorScheme:\"blue\",variant:\"subtle\",children:\"Selected\"})]}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.600\",children:set.description}),/*#__PURE__*/_jsxs(HStack,{spacing:2,children:[/*#__PURE__*/_jsxs(Badge,{colorScheme:\"green\",variant:\"outline\",children:[set.card_count,\" cards\"]}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"purple\",variant:\"outline\",children:set.category}),/*#__PURE__*/_jsx(Badge,{colorScheme:\"orange\",variant:\"outline\",children:set.difficulty})]})]})})},set.id))})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(Box,{w:\"100%\",textAlign:\"left\",children:[/*#__PURE__*/_jsx(Text,{fontWeight:\"semibold\",color:\"gray.700\",mb:3,children:\"\\uD83D\\uDCE4 Upload New Flashcard Set\"}),/*#__PURE__*/_jsx(Box,{borderWidth:2,borderStyle:\"dashed\",borderColor:isDragOver?\"blue.500\":\"gray.300\",bg:isDragOver?\"blue.50\":\"transparent\",rounded:\"lg\",p:6,transition:\"all 0.2s\",_hover:{borderColor:\"gray.400\"},onDrop:handleDrop,onDragOver:handleDragOver,onDragLeave:handleDragLeave,children:/*#__PURE__*/_jsxs(VStack,{spacing:4,children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"jsonFile\",style:{cursor:'pointer'},children:/*#__PURE__*/_jsx(motion.div,{whileHover:{scale:1.05},whileTap:{scale:0.95},children:/*#__PURE__*/_jsx(Button,{colorScheme:\"brand\",size:\"lg\",leftIcon:/*#__PURE__*/_jsx(Icon,{as:Upload}),children:\"Choose JSON File\"})})}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"jsonFile\",accept:\".json\",style:{display:'none'},onChange:handleFileInput}),/*#__PURE__*/_jsx(Text,{fontSize:\"sm\",color:\"gray.500\",children:\"or drag and drop JSON file here\"})]})})]}),/*#__PURE__*/_jsx(AnimatePresence,{children:state.error&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,height:0},animate:{opacity:1,height:'auto'},exit:{opacity:0,height:0},style:{width:'100%'},children:/*#__PURE__*/_jsxs(Alert,{status:\"error\",rounded:\"lg\",children:[/*#__PURE__*/_jsx(AlertIcon,{}),/*#__PURE__*/_jsxs(Box,{children:[/*#__PURE__*/_jsx(AlertTitle,{children:\"Error Loading File\"}),/*#__PURE__*/_jsx(AlertDescription,{children:state.error})]})]})})})]})})})});}","map":{"version":3,"names":["React","useCallback","useState","useEffect","motion","AnimatePresence","Box","VStack","HStack","Heading","Text","Button","Icon","Alert","AlertIcon","AlertTitle","AlertDescription","useToast","Badge","Divider","useColorModeValue","SimpleGrid","Modal","ModalOverlay","ModalContent","ModalHeader","ModalBody","ModalCloseButton","useDisclosure","Upload","FileText","FolderOpen","RefreshCw","Plus","useFlashcard","jsx","_jsx","jsxs","_jsxs","UploadSection","state","dispatch","isDragOver","setIsDragOver","availableSets","setAvailableSets","selectedSet","setSelectedSet","isScanning","setIsScanning","isOpen","onOpen","onClose","toast","bgColor","borderColor","scanForFlashcardSets","metadataResponse","fetch","ok","Error","metadata","json","set","flashcard_sets","response","concat","filename","push","error","console","log","length","loadSelectedSet","type","payload","status","data","flashcards","Array","isArray","title","description","duration","isClosable","errorMessage","message","handleFileUpload","file","name","endsWith","text","JSON","parse","handleDrop","e","preventDefault","files","dataTransfer","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","target","handleSetSelect","position","bottom","right","zIndex","children","div","whileHover","scale","whileTap","colorScheme","size","rounded","leftIcon","as","onClick","boxShadow","pb","spacing","color","borderWidth","borderStyle","bg","p","transition","_hover","onDrop","onDragOver","onDragLeave","w","htmlFor","style","cursor","id","accept","display","onChange","fontSize","initial","opacity","height","animate","exit","width","y","shadow","mb","textAlign","delay","stiffness","h","justify","fontWeight","variant","isLoading","columns","base","md","map","index","x","align","card_count","category","difficulty"],"sources":["/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Box, \n  VStack, \n  HStack,\n  Heading, \n  Text, \n  Button, \n  Icon, \n  Alert, \n  AlertIcon, \n  AlertTitle, \n  AlertDescription,\n  useToast,\n  Badge,\n  Divider,\n  useColorModeValue,\n  SimpleGrid,\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalBody,\n  ModalCloseButton,\n  useDisclosure\n} from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw, Plus } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\n\ninterface FlashcardSet {\n  id: string;\n  filename: string;\n  title: string;\n  description: string;\n  category: string;\n  difficulty: string;\n  card_count: number;\n  created_date: string;\n  tags: string[];\n}\n\nexport function UploadSection() {\n  const { state, dispatch } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableSets, setAvailableSets] = useState<FlashcardSet[]>([]);\n  const [selectedSet, setSelectedSet] = useState<string>('');\n  const [isScanning, setIsScanning] = useState(false);\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const toast = useToast();\n  \n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  const scanForFlashcardSets = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // Load the metadata file to get organized flashcard sets\n      const metadataResponse = await fetch('/flashcard-data/sets-metadata.json');\n      if (!metadataResponse.ok) {\n        throw new Error('Could not load flashcard sets metadata');\n      }\n      \n      const metadata = await metadataResponse.json();\n      const availableSets: FlashcardSet[] = [];\n      \n      // Check which files actually exist\n      for (const set of metadata.flashcard_sets) {\n        try {\n          const response = await fetch(`/flashcard-data/${set.filename}`);\n          if (response.ok) {\n            availableSets.push(set);\n          }\n        } catch (error) {\n          console.log(`File ${set.filename} not found`);\n        }\n      }\n      \n      setAvailableSets(availableSets);\n      \n      // Auto-select the first set if available\n      if (availableSets.length > 0 && !selectedSet) {\n        setSelectedSet(availableSets[0].filename);\n        // We'll load the file in a separate effect\n      }\n    } catch (error) {\n      console.log('No flashcard sets found');\n      setAvailableSets([]);\n    } finally {\n      setIsScanning(false);\n    }\n  }, [selectedSet]);\n\n  const loadSelectedSet = useCallback(async (filename: string) => {\n    if (!filename) return;\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Load the actual JSON file from the flashcard-data folder\n      const response = await fetch(`/flashcard-data/${filename}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch, toast]);\n\n  // Scan for flashcard sets on component mount\n  useEffect(() => {\n    scanForFlashcardSets();\n  }, [scanForFlashcardSets]);\n\n  // Load selected set when it changes\n  useEffect(() => {\n    if (selectedSet) {\n      loadSelectedSet(selectedSet);\n    }\n  }, [selectedSet, loadSelectedSet]);\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n      \n      onClose(); // Close the upload modal\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [dispatch, toast, onClose]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleFileInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n\n  const handleSetSelect = useCallback((filename: string) => {\n    setSelectedSet(filename);\n    loadSelectedSet(filename);\n  }, [loadSelectedSet]);\n\n  // If we have flashcards loaded, show a minimal upload button\n  if (state.flashcards.length > 0) {\n    return (\n      <Box position=\"fixed\" bottom={6} right={6} zIndex={1000}>\n        <motion.div\n          whileHover={{ scale: 1.05 }}\n          whileTap={{ scale: 0.95 }}\n        >\n          <Button\n            colorScheme=\"brand\"\n            size=\"lg\"\n            rounded=\"full\"\n            leftIcon={<Icon as={Plus} />}\n            onClick={onOpen}\n            boxShadow=\"lg\"\n          >\n            Add More Sets\n          </Button>\n        </motion.div>\n\n        {/* Upload Modal */}\n        <Modal isOpen={isOpen} onClose={onClose} size=\"lg\">\n          <ModalOverlay />\n          <ModalContent>\n            <ModalHeader>📤 Upload New Flashcard Set</ModalHeader>\n            <ModalCloseButton />\n            <ModalBody pb={6}>\n              <VStack spacing={6}>\n                <Text color=\"gray.600\">\n                  Upload a JSON file created by the PDF converter tool\n                </Text>\n\n                <Box\n                  borderWidth={2}\n                  borderStyle=\"dashed\"\n                  borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                  bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                  rounded=\"lg\"\n                  p={8}\n                  transition=\"all 0.2s\"\n                  _hover={{ borderColor: \"gray.400\" }}\n                  onDrop={handleDrop}\n                  onDragOver={handleDragOver}\n                  onDragLeave={handleDragLeave}\n                  w=\"100%\"\n                >\n                  <VStack spacing={4}>\n                    <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                      <motion.div\n                        whileHover={{ scale: 1.05 }}\n                        whileTap={{ scale: 0.95 }}\n                      >\n                        <Button \n                          colorScheme=\"brand\" \n                          size=\"lg\"\n                          leftIcon={<Icon as={Upload} />}\n                        >\n                          Choose JSON File\n                        </Button>\n                      </motion.div>\n                    </label>\n                    \n                    <input\n                      type=\"file\"\n                      id=\"jsonFile\"\n                      accept=\".json\"\n                      style={{ display: 'none' }}\n                      onChange={handleFileInput}\n                    />\n                    \n                    <Text fontSize=\"sm\" color=\"gray.500\">\n                      or drag and drop JSON file here\n                    </Text>\n                  </VStack>\n                </Box>\n\n                {/* Error Display */}\n                <AnimatePresence>\n                  {state.error && (\n                    <motion.div\n                      initial={{ opacity: 0, height: 0 }}\n                      animate={{ opacity: 1, height: 'auto' }}\n                      exit={{ opacity: 0, height: 0 }}\n                      style={{ width: '100%' }}\n                    >\n                      <Alert status=\"error\" rounded=\"lg\">\n                        <AlertIcon />\n                        <Box>\n                          <AlertTitle>Error Loading File</AlertTitle>\n                          <AlertDescription>{state.error}</AlertDescription>\n                        </Box>\n                      </Alert>\n                    </motion.div>\n                  )}\n                </AnimatePresence>\n              </VStack>\n            </ModalBody>\n          </ModalContent>\n        </Modal>\n      </Box>\n    );\n  }\n\n  // If no flashcards are loaded, show the full upload interface\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        transition={{ duration: 0.5 }}\n        style={{ width: '100%' }}\n      >\n        <Box \n          bg={bgColor} \n          rounded=\"lg\" \n          shadow=\"lg\" \n          p={8} \n          mb={8}\n          borderWidth=\"1px\"\n          borderColor={borderColor}\n        >\n          <VStack spacing={6} textAlign=\"center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n            >\n              <Icon as={FolderOpen} w={16} h={16} color=\"blue.500\" />\n            </motion.div>\n            \n            <VStack spacing={4}>\n              <Heading size=\"lg\" color=\"gray.800\">\n                Welcome to Flashcard App! 🎓\n              </Heading>\n              \n              <Text color=\"gray.600\" fontSize=\"lg\">\n                Choose from your organized flashcard sets\n              </Text>\n            </VStack>\n\n            {/* Available Sets Section */}\n            {availableSets.length > 0 && (\n              <Box w=\"100%\" textAlign=\"left\">\n                <HStack justify=\"space-between\" mb={4}>\n                  <Text fontWeight=\"semibold\" color=\"gray.700\" fontSize=\"lg\">\n                    📁 Available Flashcard Sets\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    leftIcon={<Icon as={RefreshCw} />}\n                    onClick={scanForFlashcardSets}\n                    isLoading={isScanning}\n                  >\n                    Refresh\n                  </Button>\n                </HStack>\n                \n                <SimpleGrid columns={{ base: 1, md: 2 }} spacing={4}>\n                  {availableSets.map((set, index) => (\n                    <motion.div\n                      key={set.id}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: index * 0.1 }}\n                    >\n                      <Box\n                        p={4}\n                        borderWidth=\"1px\"\n                        borderColor={selectedSet === set.filename ? \"blue.300\" : \"gray.200\"}\n                        bg={selectedSet === set.filename ? \"blue.50\" : \"transparent\"}\n                        rounded=\"lg\"\n                        cursor=\"pointer\"\n                        _hover={{ \n                          borderColor: \"blue.300\",\n                          bg: \"blue.50\"\n                        }}\n                        onClick={() => handleSetSelect(set.filename)}\n                        transition=\"all 0.2s\"\n                      >\n                        <VStack align=\"start\" spacing={2}>\n                          <HStack justify=\"space-between\" w=\"100%\">\n                            <HStack spacing={3}>\n                              <Icon as={FileText} color=\"blue.500\" />\n                              <Text fontWeight=\"bold\" fontSize=\"md\">\n                                {set.title}\n                              </Text>\n                            </HStack>\n                            {selectedSet === set.filename && (\n                              <Badge colorScheme=\"blue\" variant=\"subtle\">\n                                Selected\n                              </Badge>\n                            )}\n                          </HStack>\n                          \n                          <Text fontSize=\"sm\" color=\"gray.600\">\n                            {set.description}\n                          </Text>\n                          \n                          <HStack spacing={2}>\n                            <Badge colorScheme=\"green\" variant=\"outline\">\n                              {set.card_count} cards\n                            </Badge>\n                            <Badge colorScheme=\"purple\" variant=\"outline\">\n                              {set.category}\n                            </Badge>\n                            <Badge colorScheme=\"orange\" variant=\"outline\">\n                              {set.difficulty}\n                            </Badge>\n                          </HStack>\n                        </VStack>\n                      </Box>\n                    </motion.div>\n                  ))}\n                </SimpleGrid>\n              </Box>\n            )}\n\n            {/* Divider */}\n            <Divider />\n\n            {/* Upload New File Section */}\n            <Box w=\"100%\" textAlign=\"left\">\n              <Text fontWeight=\"semibold\" color=\"gray.700\" mb={3}>\n                📤 Upload New Flashcard Set\n              </Text>\n              \n              <Box\n                borderWidth={2}\n                borderStyle=\"dashed\"\n                borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                rounded=\"lg\"\n                p={6}\n                transition=\"all 0.2s\"\n                _hover={{ borderColor: \"gray.400\" }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n              >\n                <VStack spacing={4}>\n                  <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Button \n                        colorScheme=\"brand\" \n                        size=\"lg\"\n                        leftIcon={<Icon as={Upload} />}\n                      >\n                        Choose JSON File\n                      </Button>\n                    </motion.div>\n                  </label>\n                  \n                  <input\n                    type=\"file\"\n                    id=\"jsonFile\"\n                    accept=\".json\"\n                    style={{ display: 'none' }}\n                    onChange={handleFileInput}\n                  />\n                  \n                  <Text fontSize=\"sm\" color=\"gray.500\">\n                    or drag and drop JSON file here\n                  </Text>\n                </VStack>\n              </Box>\n            </Box>\n\n            {/* Error Display */}\n            <AnimatePresence>\n              {state.error && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  style={{ width: '100%' }}\n                >\n                  <Alert status=\"error\" rounded=\"lg\">\n                    <AlertIcon />\n                    <Box>\n                      <AlertTitle>Error Loading File</AlertTitle>\n                      <AlertDescription>{state.error}</AlertDescription>\n                    </Box>\n                  </Alert>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </VStack>\n        </Box>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}