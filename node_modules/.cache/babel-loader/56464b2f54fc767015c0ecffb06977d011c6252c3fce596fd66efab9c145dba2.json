{"ast":null,"code":"var _jsxFileName = \"/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Box, VStack, HStack, Heading, Text, Button, Icon, Alert, AlertIcon, AlertTitle, AlertDescription, useToast, Badge, Divider, useColorModeValue } from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadSection() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableFiles, setAvailableFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n  const scanForJsonFiles = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // In a real app, you'd scan the filesystem\n      // For now, we'll check for known JSON files in the project\n      const knownFiles = ['flashcard.json', 'extracted_flashcards.json'];\n      const availableFiles = [];\n\n      // Check if files exist by trying to fetch them\n      for (const filename of knownFiles) {\n        try {\n          const response = await fetch(`/${filename}`);\n          if (response.ok) {\n            availableFiles.push(filename);\n          }\n        } catch (error) {\n          console.log(`File ${filename} not found`);\n        }\n      }\n      setAvailableFiles(availableFiles);\n\n      // Auto-select the first file if available\n      if (availableFiles.length > 0 && !selectedFile) {\n        setSelectedFile(availableFiles[0]);\n        // We'll load the file in a separate effect\n      }\n    } catch (error) {\n      console.log('No JSON files found');\n    } finally {\n      setIsScanning(false);\n    }\n  }, [selectedFile]);\n  const loadSelectedFile = useCallback(async filename => {\n    if (!filename) return;\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // Load the actual JSON file from the server\n      const response = await fetch(`/${filename}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: data.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: data.metadata || {}\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, [dispatch, toast]);\n\n  // Scan for JSON files on component mount\n  useEffect(() => {\n    scanForJsonFiles();\n  }, [scanForJsonFiles]);\n\n  // Load selected file when it changes\n  useEffect(() => {\n    if (selectedFile) {\n      loadSelectedFile(selectedFile);\n    }\n  }, [selectedFile, loadSelectedFile]);\n  const handleFileUpload = useCallback(async file => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: data.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: data.metadata || {}\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  }, [dispatch, toast]);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n  const handleFileInput = useCallback(e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n  const handleFileSelect = useCallback(filename => {\n    setSelectedFile(filename);\n    loadSelectedFile(filename);\n  }, [loadSelectedFile]);\n  if (state.flashcards.length > 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -20\n      },\n      transition: {\n        duration: 0.5\n      },\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: bgColor,\n        rounded: \"lg\",\n        shadow: \"lg\",\n        p: 8,\n        mb: 8,\n        borderWidth: \"1px\",\n        borderColor: borderColor,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 6,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1\n            },\n            transition: {\n              delay: 0.2,\n              type: \"spring\",\n              stiffness: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: FolderOpen,\n              w: 16,\n              h: 16,\n              color: \"blue.500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"lg\",\n              color: \"gray.800\",\n              children: \"Welcome to Flashcard App! \\uD83C\\uDF93\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.600\",\n              fontSize: \"lg\",\n              children: \"Let's find your study materials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), availableFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              justify: \"space-between\",\n              mb: 3,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"semibold\",\n                color: \"gray.700\",\n                children: \"\\uD83D\\uDCC1 Available Flashcard Sets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"ghost\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                  as: RefreshCw\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 31\n                }, this),\n                onClick: scanForJsonFiles,\n                isLoading: isScanning,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 3,\n              align: \"stretch\",\n              children: availableFiles.map((filename, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  x: -20\n                },\n                animate: {\n                  opacity: 1,\n                  x: 0\n                },\n                transition: {\n                  delay: index * 0.1\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  p: 4,\n                  borderWidth: \"1px\",\n                  borderColor: selectedFile === filename ? \"blue.300\" : \"gray.200\",\n                  bg: selectedFile === filename ? \"blue.50\" : \"transparent\",\n                  rounded: \"md\",\n                  cursor: \"pointer\",\n                  _hover: {\n                    borderColor: \"blue.300\",\n                    bg: \"blue.50\"\n                  },\n                  onClick: () => handleFileSelect(filename),\n                  transition: \"all 0.2s\",\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    justify: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(HStack, {\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        as: FileText,\n                        color: \"blue.500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Text, {\n                        fontWeight: \"medium\",\n                        children: filename\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 296,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 27\n                    }, this), selectedFile === filename && /*#__PURE__*/_jsxDEV(Badge, {\n                      colorScheme: \"blue\",\n                      variant: \"subtle\",\n                      children: \"Selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 23\n                }, this)\n              }, filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"semibold\",\n              color: \"gray.700\",\n              mb: 3,\n              children: \"\\uD83D\\uDCE4 Upload New Flashcard Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              borderWidth: 2,\n              borderStyle: \"dashed\",\n              borderColor: isDragOver ? \"blue.500\" : \"gray.300\",\n              bg: isDragOver ? \"blue.50\" : \"transparent\",\n              rounded: \"lg\",\n              p: 6,\n              transition: \"all 0.2s\",\n              _hover: {\n                borderColor: \"gray.400\"\n              },\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onDragLeave: handleDragLeave,\n              children: /*#__PURE__*/_jsxDEV(VStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"jsonFile\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(motion.div, {\n                    whileHover: {\n                      scale: 1.05\n                    },\n                    whileTap: {\n                      scale: 0.95\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"brand\",\n                      size: \"lg\",\n                      leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                        as: Upload\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 342,\n                        columnNumber: 35\n                      }, this),\n                      children: \"Choose JSON File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"jsonFile\",\n                  accept: \".json\",\n                  style: {\n                    display: 'none'\n                  },\n                  onChange: handleFileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: \"or drag and drop JSON file here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 333,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: state.error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                height: 0\n              },\n              animate: {\n                opacity: 1,\n                height: 'auto'\n              },\n              exit: {\n                opacity: 0,\n                height: 0\n              },\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                status: \"error\",\n                rounded: \"lg\",\n                children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n                    children: \"Error Loading File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 376,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                    children: state.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 377,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 217,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSection, \"p5yu1ok3zao5bmFsaUkFkTRAk3s=\", false, function () {\n  return [useFlashcard, useToast, useColorModeValue, useColorModeValue];\n});\n_c = UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","motion","AnimatePresence","Box","VStack","HStack","Heading","Text","Button","Icon","Alert","AlertIcon","AlertTitle","AlertDescription","useToast","Badge","Divider","useColorModeValue","Upload","FileText","FolderOpen","RefreshCw","useFlashcard","jsxDEV","_jsxDEV","UploadSection","_s","state","dispatch","isDragOver","setIsDragOver","availableFiles","setAvailableFiles","selectedFile","setSelectedFile","isScanning","setIsScanning","toast","bgColor","borderColor","scanForJsonFiles","knownFiles","filename","response","fetch","ok","push","error","console","log","length","loadSelectedFile","type","payload","Error","status","data","json","flashcards","Array","isArray","metadata","title","description","duration","isClosable","errorMessage","message","handleFileUpload","file","name","endsWith","text","JSON","parse","handleDrop","e","preventDefault","files","dataTransfer","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","target","handleFileSelect","children","div","initial","opacity","y","animate","exit","transition","style","width","bg","rounded","shadow","p","mb","borderWidth","spacing","textAlign","scale","delay","stiffness","as","w","h","color","fileName","_jsxFileName","lineNumber","columnNumber","size","fontSize","justify","fontWeight","variant","leftIcon","onClick","isLoading","align","map","index","x","cursor","_hover","colorScheme","borderStyle","onDrop","onDragOver","onDragLeave","htmlFor","whileHover","whileTap","id","accept","display","onChange","height","_c","$RefreshReg$"],"sources":["/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Box, \n  VStack, \n  HStack,\n  Heading, \n  Text, \n  Button, \n  Icon, \n  Alert, \n  AlertIcon, \n  AlertTitle, \n  AlertDescription,\n  useToast,\n  Badge,\n  Divider,\n  useColorModeValue\n} from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\n\nexport function UploadSection() {\n  const { state, dispatch } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableFiles, setAvailableFiles] = useState<string[]>([]);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  \n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  const scanForJsonFiles = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // In a real app, you'd scan the filesystem\n      // For now, we'll check for known JSON files in the project\n      const knownFiles = ['flashcard.json', 'extracted_flashcards.json'];\n      const availableFiles: string[] = [];\n      \n      // Check if files exist by trying to fetch them\n      for (const filename of knownFiles) {\n        try {\n          const response = await fetch(`/${filename}`);\n          if (response.ok) {\n            availableFiles.push(filename);\n          }\n        } catch (error) {\n          console.log(`File ${filename} not found`);\n        }\n      }\n      \n      setAvailableFiles(availableFiles);\n      \n      // Auto-select the first file if available\n      if (availableFiles.length > 0 && !selectedFile) {\n        setSelectedFile(availableFiles[0]);\n        // We'll load the file in a separate effect\n      }\n    } catch (error) {\n      console.log('No JSON files found');\n    } finally {\n      setIsScanning(false);\n    }\n  }, [selectedFile]);\n\n  const loadSelectedFile = useCallback(async (filename: string) => {\n    if (!filename) return;\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // Load the actual JSON file from the server\n      const response = await fetch(`/${filename}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch, toast]);\n\n  // Scan for JSON files on component mount\n  useEffect(() => {\n    scanForJsonFiles();\n  }, [scanForJsonFiles]);\n\n  // Load selected file when it changes\n  useEffect(() => {\n    if (selectedFile) {\n      loadSelectedFile(selectedFile);\n    }\n  }, [selectedFile, loadSelectedFile]);\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [dispatch, toast]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleFileInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n\n  const handleFileSelect = useCallback((filename: string) => {\n    setSelectedFile(filename);\n    loadSelectedFile(filename);\n  }, [loadSelectedFile]);\n\n  if (state.flashcards.length > 0) {\n    return null;\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        transition={{ duration: 0.5 }}\n        style={{ width: '100%' }}\n      >\n        <Box \n          bg={bgColor} \n          rounded=\"lg\" \n          shadow=\"lg\" \n          p={8} \n          mb={8}\n          borderWidth=\"1px\"\n          borderColor={borderColor}\n        >\n          <VStack spacing={6} textAlign=\"center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n            >\n              <Icon as={FolderOpen} w={16} h={16} color=\"blue.500\" />\n            </motion.div>\n            \n            <VStack spacing={4}>\n              <Heading size=\"lg\" color=\"gray.800\">\n                Welcome to Flashcard App! 🎓\n              </Heading>\n              \n              <Text color=\"gray.600\" fontSize=\"lg\">\n                Let's find your study materials\n              </Text>\n            </VStack>\n\n            {/* Available Files Section */}\n            {availableFiles.length > 0 && (\n              <Box w=\"100%\" textAlign=\"left\">\n                <HStack justify=\"space-between\" mb={3}>\n                  <Text fontWeight=\"semibold\" color=\"gray.700\">\n                    📁 Available Flashcard Sets\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    leftIcon={<Icon as={RefreshCw} />}\n                    onClick={scanForJsonFiles}\n                    isLoading={isScanning}\n                  >\n                    Refresh\n                  </Button>\n                </HStack>\n                \n                <VStack spacing={3} align=\"stretch\">\n                  {availableFiles.map((filename, index) => (\n                    <motion.div\n                      key={filename}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: index * 0.1 }}\n                    >\n                      <Box\n                        p={4}\n                        borderWidth=\"1px\"\n                        borderColor={selectedFile === filename ? \"blue.300\" : \"gray.200\"}\n                        bg={selectedFile === filename ? \"blue.50\" : \"transparent\"}\n                        rounded=\"md\"\n                        cursor=\"pointer\"\n                        _hover={{ \n                          borderColor: \"blue.300\",\n                          bg: \"blue.50\"\n                        }}\n                        onClick={() => handleFileSelect(filename)}\n                        transition=\"all 0.2s\"\n                      >\n                        <HStack justify=\"space-between\">\n                          <HStack spacing={3}>\n                            <Icon as={FileText} color=\"blue.500\" />\n                            <Text fontWeight=\"medium\">{filename}</Text>\n                          </HStack>\n                          {selectedFile === filename && (\n                            <Badge colorScheme=\"blue\" variant=\"subtle\">\n                              Selected\n                            </Badge>\n                          )}\n                        </HStack>\n                      </Box>\n                    </motion.div>\n                  ))}\n                </VStack>\n              </Box>\n            )}\n\n            {/* Divider */}\n            <Divider />\n\n            {/* Upload New File Section */}\n            <Box w=\"100%\" textAlign=\"left\">\n              <Text fontWeight=\"semibold\" color=\"gray.700\" mb={3}>\n                📤 Upload New Flashcard Set\n              </Text>\n              \n              <Box\n                borderWidth={2}\n                borderStyle=\"dashed\"\n                borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                rounded=\"lg\"\n                p={6}\n                transition=\"all 0.2s\"\n                _hover={{ borderColor: \"gray.400\" }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n              >\n                <VStack spacing={4}>\n                  <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Button \n                        colorScheme=\"brand\" \n                        size=\"lg\"\n                        leftIcon={<Icon as={Upload} />}\n                      >\n                        Choose JSON File\n                      </Button>\n                    </motion.div>\n                  </label>\n                  \n                  <input\n                    type=\"file\"\n                    id=\"jsonFile\"\n                    accept=\".json\"\n                    style={{ display: 'none' }}\n                    onChange={handleFileInput}\n                  />\n                  \n                  <Text fontSize=\"sm\" color=\"gray.500\">\n                    or drag and drop JSON file here\n                  </Text>\n                </VStack>\n              </Box>\n            </Box>\n\n            {/* Error Display */}\n            <AnimatePresence>\n              {state.error && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  style={{ width: '100%' }}\n                >\n                  <Alert status=\"error\" rounded=\"lg\">\n                    <AlertIcon />\n                    <Box>\n                      <AlertTitle>Error Loading File</AlertTitle>\n                      <AlertDescription>{state.error}</AlertDescription>\n                    </Box>\n                  </Alert>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </VStack>\n        </Box>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}