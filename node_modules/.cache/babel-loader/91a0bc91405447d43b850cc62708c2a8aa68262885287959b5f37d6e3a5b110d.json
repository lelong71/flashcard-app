{"ast":null,"code":"var _jsxFileName = \"/Users/longl488/dev/tmp/flashcard/src/contexts/FlashcardContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useReducer } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  flashcards: [],\n  currentCardIndex: 0,\n  isAnswerVisible: false,\n  originalOrder: [],\n  metadata: null,\n  isLoading: false,\n  error: null\n};\nfunction flashcardReducer(state, action) {\n  switch (action.type) {\n    case 'SET_FLASHCARDS':\n      return {\n        ...state,\n        flashcards: action.payload,\n        originalOrder: [...action.payload],\n        currentCardIndex: 0,\n        isAnswerVisible: false,\n        error: null\n      };\n    case 'SET_METADATA':\n      return {\n        ...state,\n        metadata: action.payload\n      };\n    case 'SET_CURRENT_CARD':\n      return {\n        ...state,\n        currentCardIndex: action.payload,\n        isAnswerVisible: false\n      };\n    case 'TOGGLE_ANSWER':\n      return {\n        ...state,\n        isAnswerVisible: !state.isAnswerVisible\n      };\n    case 'SHUFFLE_CARDS':\n      const shuffled = [...state.flashcards];\n      for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n      }\n      return {\n        ...state,\n        flashcards: shuffled,\n        currentCardIndex: 0,\n        isAnswerVisible: false\n      };\n    case 'RESET':\n      return {\n        ...state,\n        flashcards: [],\n        currentCardIndex: 0,\n        isAnswerVisible: false,\n        originalOrder: [],\n        metadata: null,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\nconst FlashcardContext = /*#__PURE__*/createContext(undefined);\nexport function FlashcardProvider({\n  children\n}) {\n  _s();\n  const [state, dispatch] = useReducer(flashcardReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(FlashcardContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 5\n  }, this);\n}\n_s(FlashcardProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n_c = FlashcardProvider;\nexport function useFlashcard() {\n  _s2();\n  const context = useContext(FlashcardContext);\n  if (context === undefined) {\n    throw new Error('useFlashcard must be used within a FlashcardProvider');\n  }\n  return context;\n}\n_s2(useFlashcard, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"FlashcardProvider\");","map":{"version":3,"names":["React","createContext","useContext","useReducer","jsxDEV","_jsxDEV","initialState","flashcards","currentCardIndex","isAnswerVisible","originalOrder","metadata","isLoading","error","flashcardReducer","state","action","type","payload","shuffled","i","length","j","Math","floor","random","FlashcardContext","undefined","FlashcardProvider","children","_s","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useFlashcard","_s2","context","Error","$RefreshReg$"],"sources":["/Users/longl488/dev/tmp/flashcard/src/contexts/FlashcardContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useReducer, ReactNode } from 'react';\n\nexport interface Flashcard {\n  question: string;\n  answer: string;\n  all_options?: Record<string, string>;\n  question_number: number;\n  format: 'multiple_choice' | 'true_false';\n}\n\nexport interface Metadata {\n  source_pdf?: string;\n  total_pages?: number;\n  format_type?: string;\n  questions_extracted?: number;\n  answer_key_entries?: number;\n  valid_flashcards?: number;\n  conversion_timestamp?: string;\n}\n\ninterface FlashcardState {\n  flashcards: Flashcard[];\n  currentCardIndex: number;\n  isAnswerVisible: boolean;\n  originalOrder: Flashcard[];\n  metadata: Metadata | null;\n  isLoading: boolean;\n  error: string | null;\n}\n\ntype FlashcardAction =\n  | { type: 'SET_FLASHCARDS'; payload: Flashcard[] }\n  | { type: 'SET_METADATA'; payload: Metadata }\n  | { type: 'SET_CURRENT_CARD'; payload: number }\n  | { type: 'TOGGLE_ANSWER' }\n  | { type: 'SHUFFLE_CARDS' }\n  | { type: 'RESET' }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: string | null };\n\nconst initialState: FlashcardState = {\n  flashcards: [],\n  currentCardIndex: 0,\n  isAnswerVisible: false,\n  originalOrder: [],\n  metadata: null,\n  isLoading: false,\n  error: null,\n};\n\nfunction flashcardReducer(state: FlashcardState, action: FlashcardAction): FlashcardState {\n  switch (action.type) {\n    case 'SET_FLASHCARDS':\n      return {\n        ...state,\n        flashcards: action.payload,\n        originalOrder: [...action.payload],\n        currentCardIndex: 0,\n        isAnswerVisible: false,\n        error: null,\n      };\n    \n    case 'SET_METADATA':\n      return {\n        ...state,\n        metadata: action.payload,\n      };\n    \n    case 'SET_CURRENT_CARD':\n      return {\n        ...state,\n        currentCardIndex: action.payload,\n        isAnswerVisible: false,\n      };\n    \n    case 'TOGGLE_ANSWER':\n      return {\n        ...state,\n        isAnswerVisible: !state.isAnswerVisible,\n      };\n    \n    case 'SHUFFLE_CARDS':\n      const shuffled = [...state.flashcards];\n      for (let i = shuffled.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffled[i], shuffled[j]] = [shuffled[j], shuffled[i]];\n      }\n      return {\n        ...state,\n        flashcards: shuffled,\n        currentCardIndex: 0,\n        isAnswerVisible: false,\n      };\n    \n    case 'RESET':\n      return {\n        ...state,\n        flashcards: [],\n        currentCardIndex: 0,\n        isAnswerVisible: false,\n        originalOrder: [],\n        metadata: null,\n        error: null,\n      };\n    \n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    \n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.payload,\n        isLoading: false,\n      };\n    \n    default:\n      return state;\n  }\n}\n\ninterface FlashcardContextType {\n  state: FlashcardState;\n  dispatch: React.Dispatch<FlashcardAction>;\n}\n\nconst FlashcardContext = createContext<FlashcardContextType | undefined>(undefined);\n\nexport function FlashcardProvider({ children }: { children: ReactNode }) {\n  const [state, dispatch] = useReducer(flashcardReducer, initialState);\n\n  return (\n    <FlashcardContext.Provider value={{ state, dispatch }}>\n      {children}\n    </FlashcardContext.Provider>\n  );\n}\n\nexport function useFlashcard() {\n  const context = useContext(FlashcardContext);\n  if (context === undefined) {\n    throw new Error('useFlashcard must be used within a FlashcardProvider');\n  }\n  return context;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}