{"ast":null,"code":"var _jsxFileName = \"/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { Box, VStack, HStack, Heading, Text, Button, Icon, Alert, AlertIcon, AlertTitle, AlertDescription, useToast, Badge, Divider, useColorModeValue } from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function UploadSection() {\n  _s();\n  const {\n    state,\n    dispatch\n  } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableFiles, setAvailableFiles] = useState([]);\n  const [selectedFile, setSelectedFile] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  // Scan for JSON files on component mount\n  useEffect(() => {\n    scanForJsonFiles();\n  }, []);\n  const scanForJsonFiles = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // In a real app, you'd scan the filesystem\n      // For now, we'll simulate finding files\n      const mockFiles = ['flashcards.json', 'exam_questions.json', 'study_set.json'];\n      setAvailableFiles(mockFiles);\n\n      // Auto-select the first file if available\n      if (mockFiles.length > 0 && !selectedFile) {\n        setSelectedFile(mockFiles[0]);\n        await loadSelectedFile(mockFiles[0]);\n      }\n    } catch (error) {\n      console.log('No JSON files found');\n    } finally {\n      setIsScanning(false);\n    }\n  }, [selectedFile]);\n  const loadSelectedFile = useCallback(async filename => {\n    if (!filename) return;\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      // In a real app, you'd load the actual file\n      // For demo purposes, we'll simulate loading\n      const mockData = {\n        flashcards: [{\n          question: \"What is the capital of France?\",\n          answer: \"Paris\",\n          question_number: 1,\n          format: \"multiple_choice\",\n          all_options: {\n            \"A\": \"Paris\",\n            \"B\": \"London\",\n            \"C\": \"Berlin\",\n            \"D\": \"Madrid\"\n          }\n        }, {\n          question: \"What is 2 + 2?\",\n          answer: \"4\",\n          question_number: 2,\n          format: \"multiple_choice\",\n          all_options: {\n            \"A\": \"3\",\n            \"B\": \"4\",\n            \"C\": \"5\",\n            \"D\": \"6\"\n          }\n        }],\n        metadata: {\n          source_pdf: filename,\n          total_pages: 10,\n          format_type: \"multiple_choice\",\n          questions_extracted: 50,\n          answer_key_entries: 50,\n          valid_flashcards: 2\n        }\n      };\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: mockData.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: mockData.metadata\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${mockData.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    } finally {\n      dispatch({\n        type: 'SET_LOADING',\n        payload: false\n      });\n    }\n  }, [dispatch, toast]);\n  const handleFileUpload = useCallback(async file => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n      return;\n    }\n    dispatch({\n      type: 'SET_LOADING',\n      payload: true\n    });\n    dispatch({\n      type: 'SET_ERROR',\n      payload: null\n    });\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n      dispatch({\n        type: 'SET_FLASHCARDS',\n        payload: data.flashcards\n      });\n      dispatch({\n        type: 'SET_METADATA',\n        payload: data.metadata || {}\n      });\n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({\n        type: 'SET_ERROR',\n        payload: errorMessage\n      });\n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n  }, [dispatch, toast]);\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n  const handleDragLeave = useCallback(e => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n  const handleFileInput = useCallback(e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n  const handleFileSelect = useCallback(filename => {\n    setSelectedFile(filename);\n    loadSelectedFile(filename);\n  }, [loadSelectedFile]);\n  if (state.flashcards.length > 0) {\n    return null;\n  }\n  return /*#__PURE__*/_jsxDEV(AnimatePresence, {\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      initial: {\n        opacity: 0,\n        y: 20\n      },\n      animate: {\n        opacity: 1,\n        y: 0\n      },\n      exit: {\n        opacity: 0,\n        y: -20\n      },\n      transition: {\n        duration: 0.5\n      },\n      style: {\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        bg: bgColor,\n        rounded: \"lg\",\n        shadow: \"lg\",\n        p: 8,\n        mb: 8,\n        borderWidth: \"1px\",\n        borderColor: borderColor,\n        children: /*#__PURE__*/_jsxDEV(VStack, {\n          spacing: 6,\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(motion.div, {\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1\n            },\n            transition: {\n              delay: 0.2,\n              type: \"spring\",\n              stiffness: 200\n            },\n            children: /*#__PURE__*/_jsxDEV(Icon, {\n              as: FolderOpen,\n              w: 16,\n              h: 16,\n              color: \"blue.500\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(VStack, {\n            spacing: 4,\n            children: [/*#__PURE__*/_jsxDEV(Heading, {\n              size: \"lg\",\n              color: \"gray.800\",\n              children: \"Welcome to Flashcard App! \\uD83C\\uDF93\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Text, {\n              color: \"gray.600\",\n              fontSize: \"lg\",\n              children: \"Let's find your study materials\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this), availableFiles.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(HStack, {\n              justify: \"space-between\",\n              mb: 3,\n              children: [/*#__PURE__*/_jsxDEV(Text, {\n                fontWeight: \"semibold\",\n                color: \"gray.700\",\n                children: \"\\uD83D\\uDCC1 Available Flashcard Sets\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                size: \"sm\",\n                variant: \"ghost\",\n                leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                  as: RefreshCw\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 31\n                }, this),\n                onClick: scanForJsonFiles,\n                isLoading: isScanning,\n                children: \"Refresh\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(VStack, {\n              spacing: 3,\n              align: \"stretch\",\n              children: availableFiles.map((filename, index) => /*#__PURE__*/_jsxDEV(motion.div, {\n                initial: {\n                  opacity: 0,\n                  x: -20\n                },\n                animate: {\n                  opacity: 1,\n                  x: 0\n                },\n                transition: {\n                  delay: index * 0.1\n                },\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  p: 4,\n                  borderWidth: \"1px\",\n                  borderColor: selectedFile === filename ? \"blue.300\" : \"gray.200\",\n                  bg: selectedFile === filename ? \"blue.50\" : \"transparent\",\n                  rounded: \"md\",\n                  cursor: \"pointer\",\n                  _hover: {\n                    borderColor: \"blue.300\",\n                    bg: \"blue.50\"\n                  },\n                  onClick: () => handleFileSelect(filename),\n                  transition: \"all 0.2s\",\n                  children: /*#__PURE__*/_jsxDEV(HStack, {\n                    justify: \"space-between\",\n                    children: [/*#__PURE__*/_jsxDEV(HStack, {\n                      spacing: 3,\n                      children: [/*#__PURE__*/_jsxDEV(Icon, {\n                        as: FileText,\n                        color: \"blue.500\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 298,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(Text, {\n                        fontWeight: \"medium\",\n                        children: filename\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 299,\n                        columnNumber: 29\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 27\n                    }, this), selectedFile === filename && /*#__PURE__*/_jsxDEV(Badge, {\n                      colorScheme: \"blue\",\n                      variant: \"subtle\",\n                      children: \"Selected\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this)\n              }, filename, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            w: \"100%\",\n            textAlign: \"left\",\n            children: [/*#__PURE__*/_jsxDEV(Text, {\n              fontWeight: \"semibold\",\n              color: \"gray.700\",\n              mb: 3,\n              children: \"\\uD83D\\uDCE4 Upload New Flashcard Set\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              borderWidth: 2,\n              borderStyle: \"dashed\",\n              borderColor: isDragOver ? \"blue.500\" : \"gray.300\",\n              bg: isDragOver ? \"blue.50\" : \"transparent\",\n              rounded: \"lg\",\n              p: 6,\n              transition: \"all 0.2s\",\n              _hover: {\n                borderColor: \"gray.400\"\n              },\n              onDrop: handleDrop,\n              onDragOver: handleDragOver,\n              onDragLeave: handleDragLeave,\n              children: /*#__PURE__*/_jsxDEV(VStack, {\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"jsonFile\",\n                  style: {\n                    cursor: 'pointer'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(motion.div, {\n                    whileHover: {\n                      scale: 1.05\n                    },\n                    whileTap: {\n                      scale: 0.95\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      colorScheme: \"brand\",\n                      size: \"lg\",\n                      leftIcon: /*#__PURE__*/_jsxDEV(Icon, {\n                        as: Upload\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 345,\n                        columnNumber: 35\n                      }, this),\n                      children: \"Choose JSON File\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 342,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"file\",\n                  id: \"jsonFile\",\n                  accept: \".json\",\n                  style: {\n                    display: 'none'\n                  },\n                  onChange: handleFileInput\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 352,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  fontSize: \"sm\",\n                  color: \"gray.500\",\n                  children: \"or drag and drop JSON file here\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AnimatePresence, {\n            children: state.error && /*#__PURE__*/_jsxDEV(motion.div, {\n              initial: {\n                opacity: 0,\n                height: 0\n              },\n              animate: {\n                opacity: 1,\n                height: 'auto'\n              },\n              exit: {\n                opacity: 0,\n                height: 0\n              },\n              style: {\n                width: '100%'\n              },\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                status: \"error\",\n                rounded: \"lg\",\n                children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(AlertTitle, {\n                    children: \"Error Loading File\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 379,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(AlertDescription, {\n                    children: state.error\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 380,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 220,\n    columnNumber: 5\n  }, this);\n}\n_s(UploadSection, \"e7YtWpkFXibfKGiclC3vE8ZztbI=\", false, function () {\n  return [useFlashcard, useToast, useColorModeValue, useColorModeValue];\n});\n_c = UploadSection;\nvar _c;\n$RefreshReg$(_c, \"UploadSection\");","map":{"version":3,"names":["React","useCallback","useState","useEffect","motion","AnimatePresence","Box","VStack","HStack","Heading","Text","Button","Icon","Alert","AlertIcon","AlertTitle","AlertDescription","useToast","Badge","Divider","useColorModeValue","Upload","FileText","FolderOpen","RefreshCw","useFlashcard","jsxDEV","_jsxDEV","UploadSection","_s","state","dispatch","isDragOver","setIsDragOver","availableFiles","setAvailableFiles","selectedFile","setSelectedFile","isScanning","setIsScanning","toast","bgColor","borderColor","scanForJsonFiles","mockFiles","length","loadSelectedFile","error","console","log","filename","type","payload","mockData","flashcards","question","answer","question_number","format","all_options","metadata","source_pdf","total_pages","format_type","questions_extracted","answer_key_entries","valid_flashcards","title","description","status","duration","isClosable","errorMessage","Error","message","handleFileUpload","file","name","endsWith","text","data","JSON","parse","Array","isArray","handleDrop","e","preventDefault","files","dataTransfer","handleDragOver","handleDragLeave","handleFileInput","_e$target$files","target","handleFileSelect","children","div","initial","opacity","y","animate","exit","transition","style","width","bg","rounded","shadow","p","mb","borderWidth","spacing","textAlign","scale","delay","stiffness","as","w","h","color","fileName","_jsxFileName","lineNumber","columnNumber","size","fontSize","justify","fontWeight","variant","leftIcon","onClick","isLoading","align","map","index","x","cursor","_hover","colorScheme","borderStyle","onDrop","onDragOver","onDragLeave","htmlFor","whileHover","whileTap","id","accept","display","onChange","height","_c","$RefreshReg$"],"sources":["/Users/longl488/dev/tmp/flashcard/src/components/UploadSection.tsx"],"sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport { \n  Box, \n  VStack, \n  HStack,\n  Heading, \n  Text, \n  Button, \n  Icon, \n  Alert, \n  AlertIcon, \n  AlertTitle, \n  AlertDescription,\n  useToast,\n  Select,\n  Badge,\n  Divider,\n  useColorModeValue\n} from '@chakra-ui/react';\nimport { Upload, FileText, FolderOpen, RefreshCw } from 'lucide-react';\nimport { useFlashcard } from '../contexts/FlashcardContext';\n\nexport function UploadSection() {\n  const { state, dispatch } = useFlashcard();\n  const [isDragOver, setIsDragOver] = useState(false);\n  const [availableFiles, setAvailableFiles] = useState<string[]>([]);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n  const [isScanning, setIsScanning] = useState(false);\n  const toast = useToast();\n  \n  const bgColor = useColorModeValue('white', 'gray.800');\n  const borderColor = useColorModeValue('gray.200', 'gray.700');\n\n  // Scan for JSON files on component mount\n  useEffect(() => {\n    scanForJsonFiles();\n  }, []);\n\n  const scanForJsonFiles = useCallback(async () => {\n    setIsScanning(true);\n    try {\n      // In a real app, you'd scan the filesystem\n      // For now, we'll simulate finding files\n      const mockFiles = ['flashcards.json', 'exam_questions.json', 'study_set.json'];\n      setAvailableFiles(mockFiles);\n      \n      // Auto-select the first file if available\n      if (mockFiles.length > 0 && !selectedFile) {\n        setSelectedFile(mockFiles[0]);\n        await loadSelectedFile(mockFiles[0]);\n      }\n    } catch (error) {\n      console.log('No JSON files found');\n    } finally {\n      setIsScanning(false);\n    }\n  }, [selectedFile]);\n\n  const loadSelectedFile = useCallback(async (filename: string) => {\n    if (!filename) return;\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      // In a real app, you'd load the actual file\n      // For demo purposes, we'll simulate loading\n      const mockData = {\n        flashcards: [\n          {\n            question: \"What is the capital of France?\",\n            answer: \"Paris\",\n            question_number: 1,\n            format: \"multiple_choice\" as const,\n            all_options: {\n              \"A\": \"Paris\",\n              \"B\": \"London\", \n              \"C\": \"Berlin\",\n              \"D\": \"Madrid\"\n            }\n          },\n          {\n            question: \"What is 2 + 2?\",\n            answer: \"4\",\n            question_number: 2,\n            format: \"multiple_choice\" as const,\n            all_options: {\n              \"A\": \"3\",\n              \"B\": \"4\",\n              \"C\": \"5\", \n              \"D\": \"6\"\n            }\n          }\n        ],\n        metadata: {\n          source_pdf: filename,\n          total_pages: 10,\n          format_type: \"multiple_choice\",\n          questions_extracted: 50,\n          answer_key_entries: 50,\n          valid_flashcards: 2\n        }\n      };\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: mockData.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: mockData.metadata });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${mockData.flashcards.length} flashcards from ${filename}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load ${filename}: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    } finally {\n      dispatch({ type: 'SET_LOADING', payload: false });\n    }\n  }, [dispatch, toast]);\n\n  const handleFileUpload = useCallback(async (file: File) => {\n    if (!file.name.endsWith('.json')) {\n      toast({\n        title: 'Invalid file type',\n        description: 'Please select a JSON file',\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    dispatch({ type: 'SET_LOADING', payload: true });\n    dispatch({ type: 'SET_ERROR', payload: null });\n\n    try {\n      const text = await file.text();\n      const data = JSON.parse(text);\n\n      if (!data.flashcards || !Array.isArray(data.flashcards)) {\n        throw new Error('Invalid JSON format: missing flashcards array');\n      }\n\n      if (data.flashcards.length === 0) {\n        throw new Error('No flashcards found in the JSON file');\n      }\n\n      dispatch({ type: 'SET_FLASHCARDS', payload: data.flashcards });\n      dispatch({ type: 'SET_METADATA', payload: data.metadata || {} });\n      \n      toast({\n        title: 'Success!',\n        description: `Loaded ${data.flashcards.length} flashcards from ${file.name}`,\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      const errorMessage = `Failed to load JSON file: ${error instanceof Error ? error.message : 'Unknown error'}`;\n      dispatch({ type: 'SET_ERROR', payload: errorMessage });\n      \n      toast({\n        title: 'Error loading file',\n        description: errorMessage,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n  }, [dispatch, toast]);\n\n  const handleDrop = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n    \n    const files = e.dataTransfer.files;\n    if (files.length > 0) {\n      handleFileUpload(files[0]);\n    }\n  }, [handleFileUpload]);\n\n  const handleDragOver = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(true);\n  }, []);\n\n  const handleDragLeave = useCallback((e: React.DragEvent) => {\n    e.preventDefault();\n    setIsDragOver(false);\n  }, []);\n\n  const handleFileInput = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const file = e.target.files?.[0];\n    if (file) {\n      handleFileUpload(file);\n    }\n  }, [handleFileUpload]);\n\n  const handleFileSelect = useCallback((filename: string) => {\n    setSelectedFile(filename);\n    loadSelectedFile(filename);\n  }, [loadSelectedFile]);\n\n  if (state.flashcards.length > 0) {\n    return null;\n  }\n\n  return (\n    <AnimatePresence>\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        exit={{ opacity: 0, y: -20 }}\n        transition={{ duration: 0.5 }}\n        style={{ width: '100%' }}\n      >\n        <Box \n          bg={bgColor} \n          rounded=\"lg\" \n          shadow=\"lg\" \n          p={8} \n          mb={8}\n          borderWidth=\"1px\"\n          borderColor={borderColor}\n        >\n          <VStack spacing={6} textAlign=\"center\">\n            <motion.div\n              initial={{ scale: 0 }}\n              animate={{ scale: 1 }}\n              transition={{ delay: 0.2, type: \"spring\", stiffness: 200 }}\n            >\n              <Icon as={FolderOpen} w={16} h={16} color=\"blue.500\" />\n            </motion.div>\n            \n            <VStack spacing={4}>\n              <Heading size=\"lg\" color=\"gray.800\">\n                Welcome to Flashcard App! 🎓\n              </Heading>\n              \n              <Text color=\"gray.600\" fontSize=\"lg\">\n                Let's find your study materials\n              </Text>\n            </VStack>\n\n            {/* Available Files Section */}\n            {availableFiles.length > 0 && (\n              <Box w=\"100%\" textAlign=\"left\">\n                <HStack justify=\"space-between\" mb={3}>\n                  <Text fontWeight=\"semibold\" color=\"gray.700\">\n                    📁 Available Flashcard Sets\n                  </Text>\n                  <Button\n                    size=\"sm\"\n                    variant=\"ghost\"\n                    leftIcon={<Icon as={RefreshCw} />}\n                    onClick={scanForJsonFiles}\n                    isLoading={isScanning}\n                  >\n                    Refresh\n                  </Button>\n                </HStack>\n                \n                <VStack spacing={3} align=\"stretch\">\n                  {availableFiles.map((filename, index) => (\n                    <motion.div\n                      key={filename}\n                      initial={{ opacity: 0, x: -20 }}\n                      animate={{ opacity: 1, x: 0 }}\n                      transition={{ delay: index * 0.1 }}\n                    >\n                      <Box\n                        p={4}\n                        borderWidth=\"1px\"\n                        borderColor={selectedFile === filename ? \"blue.300\" : \"gray.200\"}\n                        bg={selectedFile === filename ? \"blue.50\" : \"transparent\"}\n                        rounded=\"md\"\n                        cursor=\"pointer\"\n                        _hover={{ \n                          borderColor: \"blue.300\",\n                          bg: \"blue.50\"\n                        }}\n                        onClick={() => handleFileSelect(filename)}\n                        transition=\"all 0.2s\"\n                      >\n                        <HStack justify=\"space-between\">\n                          <HStack spacing={3}>\n                            <Icon as={FileText} color=\"blue.500\" />\n                            <Text fontWeight=\"medium\">{filename}</Text>\n                          </HStack>\n                          {selectedFile === filename && (\n                            <Badge colorScheme=\"blue\" variant=\"subtle\">\n                              Selected\n                            </Badge>\n                          )}\n                        </HStack>\n                      </Box>\n                    </motion.div>\n                  ))}\n                </VStack>\n              </Box>\n            )}\n\n            {/* Divider */}\n            <Divider />\n\n            {/* Upload New File Section */}\n            <Box w=\"100%\" textAlign=\"left\">\n              <Text fontWeight=\"semibold\" color=\"gray.700\" mb={3}>\n                📤 Upload New Flashcard Set\n              </Text>\n              \n              <Box\n                borderWidth={2}\n                borderStyle=\"dashed\"\n                borderColor={isDragOver ? \"blue.500\" : \"gray.300\"}\n                bg={isDragOver ? \"blue.50\" : \"transparent\"}\n                rounded=\"lg\"\n                p={6}\n                transition=\"all 0.2s\"\n                _hover={{ borderColor: \"gray.400\" }}\n                onDrop={handleDrop}\n                onDragOver={handleDragOver}\n                onDragLeave={handleDragLeave}\n              >\n                <VStack spacing={4}>\n                  <label htmlFor=\"jsonFile\" style={{ cursor: 'pointer' }}>\n                    <motion.div\n                      whileHover={{ scale: 1.05 }}\n                      whileTap={{ scale: 0.95 }}\n                    >\n                      <Button \n                        colorScheme=\"brand\" \n                        size=\"lg\"\n                        leftIcon={<Icon as={Upload} />}\n                      >\n                        Choose JSON File\n                      </Button>\n                    </motion.div>\n                  </label>\n                  \n                  <input\n                    type=\"file\"\n                    id=\"jsonFile\"\n                    accept=\".json\"\n                    style={{ display: 'none' }}\n                    onChange={handleFileInput}\n                  />\n                  \n                  <Text fontSize=\"sm\" color=\"gray.500\">\n                    or drag and drop JSON file here\n                  </Text>\n                </VStack>\n              </Box>\n            </Box>\n\n            {/* Error Display */}\n            <AnimatePresence>\n              {state.error && (\n                <motion.div\n                  initial={{ opacity: 0, height: 0 }}\n                  animate={{ opacity: 1, height: 'auto' }}\n                  exit={{ opacity: 0, height: 0 }}\n                  style={{ width: '100%' }}\n                >\n                  <Alert status=\"error\" rounded=\"lg\">\n                    <AlertIcon />\n                    <Box>\n                      <AlertTitle>Error Loading File</AlertTitle>\n                      <AlertDescription>{state.error}</AlertDescription>\n                    </Box>\n                  </Alert>\n                </motion.div>\n              )}\n            </AnimatePresence>\n          </VStack>\n        </Box>\n      </motion.div>\n    </AnimatePresence>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}